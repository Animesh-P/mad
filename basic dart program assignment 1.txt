Code - 1: WAP to read a list of integers and print only even integers.


void printEvenNumbers(List<int> numbers) {
for (var number in numbers) { if (number % 2 == 0){
print(number);
}}
}
void main () { printEvenNumbers([1,2,3,4,5,6,7,8,9]);
}

-----------------------------------------------------------------------------------------------------------------------
Code - 2: WAP to input a number and calculate its GCD and LCM using functions.

int gcd(int a, int b) {
  while (b != 0) { 
    int temp = b; 
    b = a % b; 
    a = temp;
    }
  return a;
  } 
int lcm(int a, int b) {
  if (a == 0 || b == 0) return 0; // Handle zero edge case 
  return (a * b) ~/ gcd(a, b);
  }

void main() {
  int num1 = 12, num2 = 20;
  int gcdValue = gcd(num1, num2);
  int lcmValue = lcm(num1, num2);
  
  print("GCD of $num1 and $num2 is $gcdValue");
  print("LCM of $num1 and $num2 is $lcmValue");
  
  }
--------------------------------------------------------------------------------------------------------------------------------------

Code - 3: WAP to accept an integer number and print it in words.


const _digits = ['', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'];
const _teens = ['ten', 'eleven', 'twelve', 'thirteen', 'fourteen', 'fifteen', 'sixteen', 'seventeen', 'eighteen','nineteen'];
const _tens = ['', '', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy', 'eighty', 'ninety'];
const _groups = ['', 'thousand', 'million', 'billion', 'trillion'];

String numberToWords(int num) { 
  if (num == 0) return 'zero'; 
  
  final words = StringBuffer(); 
  var groupIndex = 0; 
  
  while (num > 0) { 
    final group = num % 1000;
    if (group > 0) {
      words.write(_threeDigitsToWords(group));
      words.write(_groups[groupIndex]);
      words.write(' ');
      }
    num ~/= 1000; 
    groupIndex++;
    }
  return words.toString().trim();
  }
String _threeDigitsToWords(int num) {
  final words = StringBuffer(); 
  if (num >= 100) { 
    words.write(_digits[num ~/ 100]); 
    words.write(' hundred '); 
    num %= 100;
    }
  if (num >= 10) {
    if (num < 20) {
      words.write(_teens[num - 10]);
      }
    else {
      words.write(_tens[num ~/ 10]);
      words.write(' ');
      words.write(_digits[num % 10]);
      }
    }
  else if (num > 0) {
    words.write(_digits[num]);
    }
  return words.toString().trim();
  }
void main() {
  int number = 2822;
  String numberInWords = numberToWords(number); 
  print("$number in words: $numberInWords");
  }


---------------------------------------------------------------------------------------------------------------------------------------------

Code - 4: WAP to print Fibonacci series until a given number using functions


void printFibonacciSeries(int limit){ 
  int a=0, b=1;
  print('Fibonacci Series:');
  while(a<=limit) {
    print(a);
    var temp = a + b;
    a = b;
    b = temp;
    }
  }
void main(){
  printFibonacciSeries(300);
  }

-------------------------------------------------------------------------------------------------------------------------------------------------


